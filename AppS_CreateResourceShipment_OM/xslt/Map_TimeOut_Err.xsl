<?xml version="1.0" encoding="UTF-8"?>
<!-- @generated mapFile="xslt/Map_TimeOut_Err.map" md5sum="125a2f686f4938e75591b7ab7dc2afc4" version="8.0.400" -->
<!--
*****************************************************************************
*   This file has been generated by the IBM XML Mapping Editor.
*
*   Mapping file:		Map_TimeOut_Err.map
*   Map declaration(s):	Map_TimeOut_Err
*   Input file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FAppS_CreateResourceShipment_OM%257DSharedContextBO/message%3D%257Bhttp%253A%252F%252FTPRMOAI%252FAIS%252FCreateResourceShipment%257DinvokeFault1Msg/xpath%3D%252F/smo.xsd
*   Output file(s):		smo://smo/name%3Dwsdl-primary/sharedContext%3D%257Bhttp%253A%252F%252FAppS_CreateResourceShipment_OM%257DSharedContextBO/message%3D%257Bhttp%253A%252F%252FTPRMOAI%252FAIS%252FCreateResourceShipment%257DinvokeFault1Msg/xpath%3D%252F/smo.xsd
*
*   Note: Do not modify the contents of this file as it is overwritten
*         each time the mapping model is updated.
*****************************************************************************
-->
<xsl:stylesheet
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xltxe="http://www.ibm.com/xmlns/prod/xltxe-j"
    xmlns:math="http://exslt.org/math"
    xmlns:str="http://exslt.org/strings"
    xmlns:set="http://exslt.org/sets"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:date="http://exslt.org/dates-and-times"
    xmlns:fn="http://www.w3.org/2005/xpath-functions"
    xmlns:exsl="http://exslt.org/common"
    xmlns:xs4xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:io5="http://www.ibm.com/websphere/sibx/smo/v6.0.1"
    xmlns:io4="http://www.ibm.com/xmlns/prod/websphere/mq/sca/6.0.0"
    xmlns:io3="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/systemview"
    xmlns:io2="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/common/extensions"
    xmlns:io="http://schemas.xmlsoap.org/ws/2004/08/addressing"
    xmlns:io18="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/fulfillment/extensions"
    xmlns:io17="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/sid-v12.5"
    xmlns:io19="http://www.w3.org/2003/05/soap-envelope"
    xmlns:io14="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/fulfillment/extension"
    xmlns:io13="http://www.w3.org/2005/08/addressing"
    xmlns:io16="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/assurance/extension"
    xmlns:io15="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/common/extension"
    xmlns:io8="wsdl.http://TPRMOAI/AIS/CreateResourceShipment"
    xmlns:io10="http://www.ibm.com/xmlns/prod/websphere/http/sca/6.1.0"
    xmlns:io22="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/billing/extensions"
    xmlns:io9="http://www.ibm.com/software/issw/telecom/pack/v8.5.0/lite/businessobject/system/billing/extension"
    xmlns:io21="http://AppS_CreateResourceShipment_OM"
    xmlns:io6="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/common"
    xmlns:io12="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/messageview"
    xmlns:io20="http://www.ibm.com/telecom/v8.5.0/businessobject/system/sid-v12.5/assurance/extensions"
    xmlns:io7="http://TPRMOAI/AIS/CreateResourceShipment"
    xmlns:io11="http://TPCMN"
    xmlns:map="http://AppS_CreateResourceShipment_OM/xslt/Map_TimeOut_Err"
    xmlns:msl="http://www.ibm.com/xmlmap"
    exclude-result-prefixes="math str set xs date fn exsl map xltxe msl"
    version="2.0">
  <xsl:output method="xml" encoding="UTF-8" indent="no"/>

  <!-- root wrapper template  -->
  <xsl:template match="/">
    <xsl:choose>
      <xsl:when test="msl:datamap">
        <msl:datamap>
          <xsl:element name="dataObject">
            <xsl:attribute name="xsi:type">
              <xsl:value-of select="'io5:ServiceMessageObject'"/>
            </xsl:attribute>
            <xsl:call-template name="map:Map_TimeOut_Err2">
              <xsl:with-param name="smo" select="msl:datamap/dataObject[1]"/>
            </xsl:call-template>
          </xsl:element>
        </msl:datamap>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="io5:smo" mode="map:Map_TimeOut_Err"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <!-- This rule represents an element mapping: "io5:smo" to "io5:smo".  -->
  <xsl:template match="io5:smo"  mode="map:Map_TimeOut_Err">
    <io5:smo>
      <context>
        <!-- a structural mapping: "context/shared"(SharedContextBO) to "shared"(SharedContextBO) -->
        <xsl:if test="context/shared">
          <xsl:copy-of select="context/shared" copy-namespaces="yes"/>
        </xsl:if>
      </context>
      <body>
        <xsl:attribute name="xsi:type">
          <xsl:value-of select="'io8:invokeFault1Msg'"/>
        </xsl:attribute>
        <io7:invokeFault1>
          <Header>
            <!-- a simple data mapping: "context/shared/OrderHeaderKey"(string) to "io6:CorrelationId_T"(string) -->
            <xsl:if test="context/shared/OrderHeaderKey">
              <xsl:element name="io6:CorrelationId_T">
                <xsl:value-of select="context/shared/OrderHeaderKey"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "body/io7:invokeFault1/Header/io6:ActivityStatus_T"(string) to "io6:ActivityStatus_T"(string) -->
            <xsl:if test="body/io7:invokeFault1/Header/io6:ActivityStatus_T">
              <xsl:element name="io6:ActivityStatus_T">
                <xsl:value-of select="body/io7:invokeFault1/Header/io6:ActivityStatus_T"/>
              </xsl:element>
            </xsl:if>
            <!-- a simple data mapping: "body/io7:invokeFault1/Header/io6:Timestamp"(dateTime) to "io6:Timestamp"(dateTime) -->
            <xsl:if test="body/io7:invokeFault1/Header/io6:Timestamp">
              <xsl:element name="io6:Timestamp">
                <xsl:value-of select="body/io7:invokeFault1/Header/io6:Timestamp"/>
              </xsl:element>
            </xsl:if>
          </Header>
          <!-- a structural mapping: "body/io7:invokeFault1/Payload"(Exception) to "Payload"(Exception) -->
          <xsl:if test="body/io7:invokeFault1/Payload">
            <xsl:copy-of select="body/io7:invokeFault1/Payload" copy-namespaces="yes"/>
          </xsl:if>
        </io7:invokeFault1>
      </body>
    </io5:smo>
  </xsl:template>

  <!-- This rule represents a type mapping: "io5:smo" to "io5:smo".  -->
  <xsl:template name="map:Map_TimeOut_Err2">
    <xsl:param name="smo"/>
    <context>
      <!-- a structural mapping: "$smo/context/shared"(SharedContextBO) to "shared"(SharedContextBO) -->
      <xsl:if test="$smo/context/shared">
        <xsl:copy-of select="$smo/context/shared" copy-namespaces="yes"/>
      </xsl:if>
    </context>
    <body>
      <xsl:attribute name="xsi:type">
        <xsl:value-of select="'io8:invokeFault1Msg'"/>
      </xsl:attribute>
      <io7:invokeFault1>
        <Header>
          <!-- a simple data mapping: "$smo/context/shared/OrderHeaderKey"(string) to "io6:CorrelationId_T"(string) -->
          <xsl:if test="$smo/context/shared/OrderHeaderKey">
            <xsl:element name="io6:CorrelationId_T">
              <xsl:value-of select="$smo/context/shared/OrderHeaderKey"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/io7:invokeFault1/Header/io6:ActivityStatus_T"(string) to "io6:ActivityStatus_T"(string) -->
          <xsl:if test="$smo/body/io7:invokeFault1/Header/io6:ActivityStatus_T">
            <xsl:element name="io6:ActivityStatus_T">
              <xsl:value-of select="$smo/body/io7:invokeFault1/Header/io6:ActivityStatus_T"/>
            </xsl:element>
          </xsl:if>
          <!-- a simple data mapping: "$smo/body/io7:invokeFault1/Header/io6:Timestamp"(dateTime) to "io6:Timestamp"(dateTime) -->
          <xsl:if test="$smo/body/io7:invokeFault1/Header/io6:Timestamp">
            <xsl:element name="io6:Timestamp">
              <xsl:value-of select="$smo/body/io7:invokeFault1/Header/io6:Timestamp"/>
            </xsl:element>
          </xsl:if>
        </Header>
        <!-- a structural mapping: "$smo/body/io7:invokeFault1/Payload"(Exception) to "Payload"(Exception) -->
        <xsl:if test="$smo/body/io7:invokeFault1/Payload">
          <xsl:copy-of select="$smo/body/io7:invokeFault1/Payload" copy-namespaces="yes"/>
        </xsl:if>
      </io7:invokeFault1>
    </body>
  </xsl:template>

  <!-- *****************    Utility Templates    ******************  -->
  <!-- copy the namespace declarations from the source to the target -->
  <xsl:template name="copyNamespaceDeclarations">
    <xsl:param name="root"/>
    <xsl:for-each select="$root/namespace::node()[not(name() = '')]">
      <xsl:copy/>
    </xsl:for-each>
  </xsl:template>
</xsl:stylesheet>
